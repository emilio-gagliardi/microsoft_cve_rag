{"node_id": "8d9cfccf-d4bf-f5a5-3947-dcd5e33fc073", "embedding": null, "excluded_embed_metadata_keys": ["id", "added_to_vector_store", "added_to_summary_index", "added_to_graph_store", "cve_fixes", "cve_mentions", "email_text_original", "unique_tokens", "tags"], "excluded_llm_metadata_keys": ["id", "added_to_vector_store", "added_to_summary_index", "added_to_graph_store", "cve_fixes", "cve_mentions", "email_text_original", "unique_tokens", "tags"], "text": "The PS code I\nposted last week checks partition sizes and this change adds free space checks\nas well (using Get-Volume with the path returned by \"reagentc /info\"): ===\n$winreloc = (reagentc /info | select-string \"Windows RE\nlocation:\\s+(([^\\r\\n]+)disk(\\d+)\\\\partition(\\d+)\\\\([^\\r\\n]+))\"); $winrepath =\n$winreloc.Matches.groups[1].value.trim() $winredisk =\n$winreloc.Matches.groups[3].value $winrepart = $winreloc.Matches.groups[4].value\nWrite-Host \"WinRE is at disk $winredisk partition $winrepart\" $winresize =\n(Get-Volume -FilePath $winrepath | select SizeRemaining,Size ) $winrefree =\n[math]::Round($winresize.SizeRemaining/1MB) Write-Host WinRE has $winrefree MB\nfree space. if ($winresize.Size -lt 1GB) { Write-Host WinRE needs to be larger.\n} elseif ($winresize.SizeRemaining -lt 250MB) { Write-Host WinRE needs more free\nspace. } else { Write-Host WinRE is large enough. } === -S\nLink: None", "metadata": {"id": "8d9cfccf-d4bf-f5a5-3947-dcd5e33fc073", "receivedDateTime": "2024-01-18T19:10:35+00:00", "topic": "Feedback to Microsoft", "subject": "RE: [patchmanagement] Feedback to Microsoft", "published": "2024-01-18T00:00:00", "collection": "patch_management", "cve_fixes": "", "cve_mentions": null, "tags": "", "conversation_link": "N/A", "email_text_original": "[You don't often get email from patchmanagement.org@12pd.com. Learn why this is\nimportant at https://aka.ms/LearnAboutSenderIdentification ] The PS code I\nposted last week checks partition sizes and this change adds free space checks\nas well (using Get-Volume with the path returned by \"reagentc /info\"): ===\n$winreloc = (reagentc /info | select-string \"Windows RE\nlocation:\\s+(([^\\r\\n]+)disk(\\d+)\\\\partition(\\d+)\\\\([^\\r\\n]+))\"); $winrepath =\n$winreloc.Matches.groups[1].value.trim() $winredisk =\n$winreloc.Matches.groups[3].value $winrepart = $winreloc.Matches.groups[4].value\nWrite-Host \"WinRE is at disk $winredisk partition $winrepart\" $winresize =\n(Get-Volume -FilePath $winrepath | select SizeRemaining,Size ) $winrefree =\n[math]::Round($winresize.SizeRemaining/1MB) Write-Host WinRE has $winrefree MB\nfree space. if ($winresize.Size -lt 1GB) { Write-Host WinRE needs to be larger.\n} elseif ($winresize.SizeRemaining -lt 250MB) { Write-Host WinRE needs more free\nspace. } else { Write-Host WinRE is large enough. } === -S\nLink: None \n", "evaluated_keywords": "['post last week check partition size', 'change add free space check', 'math ]:: round ($ winresize', 'winrefree mb free space']", "evaluated_noun_chunks": "['The PS code', 'partition sizes', 'free space checks', 'more free space']", "post_type": "Solution provided", "unique_tokens": 74, "product_build_ids": [], "cve_ids": null, "etl_processing_status": {"document_processed": true, "entities_extracted": true, "graph_prepared": true, "vector_prepared": true, "last_processed_at": "2025-01-03T16:42:11.174872", "processing_version": "1.0"}, "is_processed": true, "next_id": "7bc52ff8-fa8a-f90d-0a5f-4b96702c2744", "previous_id": "aaba0ceb-8f8e-180e-e11d-d5874002b32e", "product_mentions": [], "thread_id": "feedback_microsoft", "build_numbers": [], "kb_ids": [], "noun_chunks": "['The PS code', 'partition sizes', 'free space checks', 'more free space']", "keywords": "['post last week check partition size', 'change add free space check', 'math ]:: round ($ winresize', 'winrefree mb free space']", "node_label": "PatchManagementPost"}, "added_at": "2025-01-03T16:36:18.247446", "last_updated": "2025-01-04T21:08:16.240045"}