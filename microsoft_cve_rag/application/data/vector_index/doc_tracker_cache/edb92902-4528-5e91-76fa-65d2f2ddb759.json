{"node_id": "edb92902-4528-5e91-76fa-65d2f2ddb759", "embedding": null, "excluded_embed_metadata_keys": null, "excluded_llm_metadata_keys": null, "text": null, "metadata": {"id": "edb92902-4528-5e91-76fa-65d2f2ddb759", "receivedDateTime": "2023-11-22T16:51:52+00:00", "topic": "RE: Detecting whether PC has Acrobat or Reader", "subject": "Re: [patchmanagement] RE: Detecting whether PC has Acrobat or Reader", "published": "2023-11-22T00:00:00", "collection": "patch_management", "added_to_vector_store": false, "added_to_summary_index": false, "added_to_graph_store": false, "cve_fixes": "", "cve_mentions": null, "tags": "", "conversation_link": "//groups.google.com/d/msgid/patchmanagement/CAOsGbKRwrRC12yptJQOUO3HRq-VcXCGeVct2966hoEfvqZd%3Dyg%40mail.gmail.com", "email_text_original": "You don't often get email from matjaz.pavel@gmail.com. Learn why this is\nimportant [https://aka.ms/LearnAboutSenderIdentification] \nHi! \nYou can also try this PowerShell code: \n$Check64BitOS = [Environment]::Is64BitOperatingSystem \nIf ( $Check64BitOS )\n\u00a0 {\n# Check for 64 bit application\n$AppCheck = Get-ItemProperty\nHKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where-Object {\n$_.DisplayName -LIKE '*Adobe*'} | Select-Object DisplayName, DisplayVersion \nIf ( $null -ne $AppCheck.DisplayName )\n\u00a0{\nWrite-Host \"Found Adobe 64 bit installation.\"\n\u00a0}\nElse\n\u00a0{\nWrite-Host \"No Adobe 64-bit installation found.\"\n\u00a0} \n# Check for 32 bit application\n\u00a0 \u00a0 $AppCheckWOW6432Node = Get-ItemProperty\nHKLM:\\Software\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* |\nWhere-Object { $_.DisplayName -LIKE '*Adobe*'} | Select-Object DisplayName,\nDisplayVersion \nIf ( $null -ne $AppCheckWOW6432Node.DisplayName )\n\u00a0{\nWrite-Host \"Found Adobe 32 bit installation.\"\n\u00a0}\nElse\n\u00a0{\nWrite-Host \"No Adobe 32-bit installation found.\"\n\u00a0} \n}\n# If we have 32 bit OS \u00a0\nElse\n\u00a0 {\n# Check for 32 bit application\n\u00a0 \u00a0 $AppCheck = Get-ItemProperty\nHKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where-Object {\n$_.DisplayName -LIKE '*Adobe*'} | Select-Object DisplayName, DisplayVersion \nIf ( $null -ne $AppCheck.DisplayName )\n\u00a0{\n\u00a0 \u00a0Write-Host \"Found Adobe 32 bit...\"\n\u00a0}\nElse\n\u00a0{\nWrite-Host \"No Adobe 32-bit installation found.\"\n\u00a0}\n\u00a0 } \nYou have to enumarete registry - in this sample I first check if I have 64 bit\nOS, then I enumerate registry for 64 bit application and also for 32 bit\napplication. If I have 32 bit OS, I simply check once in registry. No WMI\nenumaration :) \nHTH,\nMatjaz \nV V sre., 22. nov. 2023 ob 17:01 je oseba 'Charles F Sullivan' via\nPatchManagement <patchmanagement@googlegroups.com\nLink: https://groups.google.com/d/msgid/patchmanagement/CAOsGbKRwrRC12yptJQOUO3HRq-VcXCGeVct2966hoEfvqZd%3Dyg%40mail.gmail.com \n", "evaluated_keywords": "['found adobe 64 bit installation', 'found adobe 32 bit installation', 'environment ]:: is64bitoperatingsystem', 'powershell code']", "evaluated_noun_chunks": "[\"this PowerShell code\", \"64 bit application\", \"32 bit application\", \"64 bit installation\"]", "post_type": "Solution provided", "unique_tokens": 77, "product_build_ids": [], "cve_ids": null, "etl_processing_status": {"document_processed": true, "entities_extracted": true, "graph_prepared": true, "vector_prepared": true, "last_processed_at": "2024-12-30T14:38:36.790853", "processing_version": "1.0"}, "is_processed": null, "next_id": "e59949b8-49a7-99e3-7040-4b09aa062127", "previous_id": "cef4cd66-6243-7c06-dcdd-f0433246c14c", "product_mentions": [], "thread_id": "detecting_pc_acrobat_reader_b10ef3", "is_historical": true, "noun_chunks": "[\"this PowerShell code\", \"64 bit application\", \"32 bit application\", \"64 bit installation\"]", "keywords": "['found adobe 64 bit installation', 'found adobe 32 bit installation', 'environment ]:: is64bitoperatingsystem', 'powershell code']", "node_label": "PatchManagementPost", "kb_ids": [], "build_numbers": []}, "added_at": "2024-12-30T14:38:18.912880", "last_updated": "2024-12-30T15:45:06.094645"}